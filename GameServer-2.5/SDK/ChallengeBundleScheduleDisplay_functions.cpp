#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundleScheduleDisplay

#include "Basic.hpp"

#include "ChallengeBundleScheduleDisplay_classes.hpp"
#include "ChallengeBundleScheduleDisplay_parameters.hpp"


namespace SDK
{

// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.ExecuteUbergraph_ChallengeBundleScheduleDisplay
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             K2Node_ComponentBoundEvent_TabId1                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             K2Node_ComponentBoundEvent_TabId                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    K2Node_ComponentBoundEvent_TabButton                   (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::ExecuteUbergraph_ChallengeBundleScheduleDisplay(int32 EntryPoint, class FName K2Node_ComponentBoundEvent_TabId1, class FName K2Node_ComponentBoundEvent_TabId, class UCommonButton* K2Node_ComponentBoundEvent_TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "ExecuteUbergraph_ChallengeBundleScheduleDisplay");

	Params::ChallengeBundleScheduleDisplay_C_ExecuteUbergraph_ChallengeBundleScheduleDisplay Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.K2Node_ComponentBoundEvent_TabId1 = K2Node_ComponentBoundEvent_TabId1;
	Parms.K2Node_ComponentBoundEvent_TabId = K2Node_ComponentBoundEvent_TabId;
	Parms.K2Node_ComponentBoundEvent_TabButton = K2Node_ComponentBoundEvent_TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    TabButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature");

	Params::ChallengeBundleScheduleDisplay_C_BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_12_OnTabButtonCreated__DelegateSignature Parms{};

	Parms.TabId = TabId;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature");

	Params::ChallengeBundleScheduleDisplay_C_BndEvt__CompendiumPageTabList_K2Node_ComponentBoundEvent_1_OnTabSelected__DelegateSignature Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.SetBundle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleScheduleItem* BundleInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortChallengeBundleScheduleDefinition*Param_BundleScheduleDef                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::SetBundle(class UFortChallengeBundleScheduleItem* BundleInstance, class UFortChallengeBundleScheduleDefinition* Param_BundleScheduleDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "SetBundle");

	Params::ChallengeBundleScheduleDisplay_C_SetBundle Parms{};

	Parms.BundleInstance = BundleInstance;
	Parms.Param_BundleScheduleDef = Param_BundleScheduleDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.UpdateTabs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UFortChallengeBundleItem*> CallFunc_GetChallengeBundleItems_OutActiveItems        (ZeroConstructor, ReferenceParm)
// TArray<class UFortChallengeBundleItemDefinition*>CallFunc_GetChallengeBundleItems_OutUnlockableItems    (ZeroConstructor, ReferenceParm)
// class UFortChallengeBundleItem*         CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortChallengeBundleItemDefinition*CallFunc_GetChallengeDefinitionBP_ReturnValue          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable1                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class APlayerController*                CallFunc_GetOwningPlayer_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAthenaChallengeBundle_UpsellButton_C*CallFunc_Create_ReturnValue                            (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortChallengeBundleItemDefinition*CallFunc_Array_Get_Item1                               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue1                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable1                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                CallFunc_GetOwningPlayer_ReturnValue1                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UChallengeBundlePage_C*           CallFunc_Create_ReturnValue1                           (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue1                       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::UpdateTabs(int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TArray<class UFortChallengeBundleItem*>& CallFunc_GetChallengeBundleItems_OutActiveItems, TArray<class UFortChallengeBundleItemDefinition*>& CallFunc_GetChallengeBundleItems_OutUnlockableItems, class UFortChallengeBundleItem* CallFunc_Array_Get_Item, class UFortChallengeBundleItemDefinition* CallFunc_GetChallengeDefinitionBP_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable1, bool CallFunc_Less_IntInt_ReturnValue, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UAthenaChallengeBundle_UpsellButton_C* CallFunc_Create_ReturnValue, class UFortChallengeBundleItemDefinition* CallFunc_Array_Get_Item1, int32 CallFunc_Array_Length_ReturnValue1, int32 Temp_int_Loop_Counter_Variable1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue1, class UChallengeBundlePage_C* CallFunc_Create_ReturnValue1, bool CallFunc_Less_IntInt_ReturnValue1, int32 CallFunc_Add_IntInt_ReturnValue1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "UpdateTabs");

	Params::ChallengeBundleScheduleDisplay_C_UpdateTabs Parms{};

	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_GetChallengeBundleItems_OutActiveItems = std::move(CallFunc_GetChallengeBundleItems_OutActiveItems);
	Parms.CallFunc_GetChallengeBundleItems_OutUnlockableItems = std::move(CallFunc_GetChallengeBundleItems_OutUnlockableItems);
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_GetChallengeDefinitionBP_ReturnValue = CallFunc_GetChallengeDefinitionBP_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.Temp_int_Array_Index_Variable1 = Temp_int_Array_Index_Variable1;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_GetOwningPlayer_ReturnValue = CallFunc_GetOwningPlayer_ReturnValue;
	Parms.CallFunc_Create_ReturnValue = CallFunc_Create_ReturnValue;
	Parms.CallFunc_Array_Get_Item1 = CallFunc_Array_Get_Item1;
	Parms.CallFunc_Array_Length_ReturnValue1 = CallFunc_Array_Length_ReturnValue1;
	Parms.Temp_int_Loop_Counter_Variable1 = Temp_int_Loop_Counter_Variable1;
	Parms.CallFunc_GetOwningPlayer_ReturnValue1 = CallFunc_GetOwningPlayer_ReturnValue1;
	Parms.CallFunc_Create_ReturnValue1 = CallFunc_Create_ReturnValue1;
	Parms.CallFunc_Less_IntInt_ReturnValue1 = CallFunc_Less_IntInt_ReturnValue1;
	Parms.CallFunc_Add_IntInt_ReturnValue1 = CallFunc_Add_IntInt_ReturnValue1;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetChallengeBundleItems_OutActiveItems = std::move(Parms.CallFunc_GetChallengeBundleItems_OutActiveItems);
	CallFunc_GetChallengeBundleItems_OutUnlockableItems = std::move(Parms.CallFunc_GetChallengeBundleItems_OutUnlockableItems);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.ResetTabs
// (Public, BlueprintCallable, BlueprintEvent)

void UChallengeBundleScheduleDisplay_C::ResetTabs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "ResetTabs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.CreateTab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleItemDefinition*ChallengeDef                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ContentWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CallFunc_GetDisplayName_ReturnValue                    ()
// class FString                           CallFunc_GetPersistentName_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// struct FFortTabButtonLabelInfo          K2Node_MakeStruct_FortTabButtonLabelInfo               ()
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_RegisterFortTab_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPanelSlot*                       CallFunc_AddChild_ReturnValue                          (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::CreateTab(class UFortChallengeBundleItemDefinition* ChallengeDef, class UWidget* ContentWidget, class FText CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_GetPersistentName_ReturnValue, const struct FFortTabButtonLabelInfo& K2Node_MakeStruct_FortTabButtonLabelInfo, class FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_RegisterFortTab_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "CreateTab");

	Params::ChallengeBundleScheduleDisplay_C_CreateTab Parms{};

	Parms.ChallengeDef = ChallengeDef;
	Parms.ContentWidget = ContentWidget;
	Parms.CallFunc_GetDisplayName_ReturnValue = CallFunc_GetDisplayName_ReturnValue;
	Parms.CallFunc_GetPersistentName_ReturnValue = std::move(CallFunc_GetPersistentName_ReturnValue);
	Parms.K2Node_MakeStruct_FortTabButtonLabelInfo = std::move(K2Node_MakeStruct_FortTabButtonLabelInfo);
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_RegisterFortTab_ReturnValue = CallFunc_RegisterFortTab_ReturnValue;
	Parms.CallFunc_AddChild_ReturnValue = CallFunc_AddChild_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.HandleTabCreated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCommonButton*                    LocalTab                                               (Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LocalTabId                                             (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UIconTabButton_C*                 K2Node_DynamicCast_AsIcon_Tab_Button                   (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             CallFunc_TextToUpper_ReturnValue                       ()

void UChallengeBundleScheduleDisplay_C::HandleTabCreated(class FName TabId, class UCommonButton* Button, class UCommonButton* LocalTab, class FName LocalTabId, class UIconTabButton_C* K2Node_DynamicCast_AsIcon_Tab_Button, bool K2Node_DynamicCast_bSuccess, class FText CallFunc_TextToUpper_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "HandleTabCreated");

	Params::ChallengeBundleScheduleDisplay_C_HandleTabCreated Parms{};

	Parms.TabId = TabId;
	Parms.Button = Button;
	Parms.LocalTab = LocalTab;
	Parms.LocalTabId = LocalTabId;
	Parms.K2Node_DynamicCast_AsIcon_Tab_Button = K2Node_DynamicCast_AsIcon_Tab_Button;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_TextToUpper_ReturnValue = CallFunc_TextToUpper_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeBundleScheduleDisplay.ChallengeBundleScheduleDisplay_C.HandleTabSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CallFunc_GetActiveTab_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeBundleScheduleDisplay_C::HandleTabSelected(class FName TabId, class FName CallFunc_GetActiveTab_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeBundleScheduleDisplay_C", "HandleTabSelected");

	Params::ChallengeBundleScheduleDisplay_C_HandleTabSelected Parms{};

	Parms.TabId = TabId;
	Parms.CallFunc_GetActiveTab_ReturnValue = CallFunc_GetActiveTab_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

