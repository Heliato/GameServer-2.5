#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestProgressWidget

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuestProgressWidget.QuestProgressWidget_C
// 0x0010 (0x0220 - 0x0210)
class UQuestProgressWidget_C final  : public UCommonUserWidget
{
public:
	class UProgressBar*                           _ProgressBar__Quest_Progress;                      // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ProgressValue;                                     // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Update(int32 Required, int32 Achieved, int32 Current, int32 Total, class FText CallFunc_Conv_IntToText_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue1, int32 CallFunc_Max_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData1, float CallFunc_Conv_IntToFloat_ReturnValue1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, float CallFunc_Divide_FloatFloat_ReturnValue, class FText CallFunc_Format_ReturnValue, class FText CallFunc_GetEmptyText_ReturnValue, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, class FText K2Node_Select_Default, ESlateVisibility Temp_byte_Variable1, bool Temp_bool_Variable1, ESlateVisibility K2Node_Select1_Default);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestProgressWidget_C">();
	}
	static class UQuestProgressWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestProgressWidget_C>();
	}
};

}

